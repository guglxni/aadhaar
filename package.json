{
  "name": "aadhaar-verification-server",
  "version": "0.0.1",
  "description": "Aadhaar Verification Server using NestJS",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "build:p12": "node -e \"const { execSync } = require('child_process'); const env = process.env; if (!env.AUA_KEY_PATH || !env.AUA_LEAF_CERT_PATH || !env.AUA_P12_PASSWORD) { console.error('Missing required env vars: AUA_KEY_PATH, AUA_LEAF_CERT_PATH, AUA_P12_PASSWORD'); process.exit(1); } const cmd = \\`openssl pkcs12 -export -inkey \\${env.AUA_KEY_PATH} -in \\${env.AUA_LEAF_CERT_PATH} -certfile certs/uidai_auth_prod.cer -out certs/aua_signing_prod.p12 -password pass:\\${env.AUA_P12_PASSWORD}\\`; console.log('Building production P12:', cmd); execSync(cmd, { stdio: 'inherit' }); console.log('âœ… Production P12 created: certs/aua_signing_prod.p12');\"",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "cross-env NODE_ENV=development nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint -c eslint.config.mjs \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest --detectOpenHandles",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "ts-node scripts/run-uidai-e2e.ts",
    "test:retry": "jest --testPathPattern=retry-logic.spec.ts",
    "status:generate": "node scripts/status-generator.js",
    "status:check": "./scripts/ci-status-check.sh",
    "ci:status": "npm run status:check"
  },
  "dependencies": {
    "@nestjs/cache-manager": "^3.0.0",
    "@nestjs/common": "^11.0.2",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.0",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.0.0",
    "@nestjs/platform-socket.io": "^11.1.3",
    "@nestjs/serve-static": "^5.0.3",
    "@nestjs/websockets": "^11.1.3",
    "@peculiar/webcrypto": "^1.5.0",
    "@types/jsrsasign": "^10.5.15",
    "@types/node-forge": "^1.3.13",
    "@types/passport-saml": "^1.1.7",
    "@xmldom/xmldom": "^0.9.8",
    "axios": "^1.9.0",
    "axios-retry": "^4.5.0",
    "body-parser": "^2.2.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "dotenv": "^16.5.0",
    "helmet": "^7.0.0",
    "jsrsasign": "^11.1.0",
    "nestjs-rate-limiter": "^3.0.0",
    "node-forge": "^1.3.1",
    "passport": "^0.7.0",
    "passport-saml": "^3.2.4",
    "qrcode": "^1.5.4",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "socket.io": "^4.8.1",
    "uuid": "^9.0.1",
    "xml-crypto": "^2.1.6",
    "xml2js": "^0.6.2",
    "xmlbuilder2": "^3.1.1",
    "xmldom": "^0.6.0",
    "xmldsigjs": "^2.6.1",
    "xpath": "^0.0.34"
  },
  "devDependencies": {
    "@darraghor/eslint-plugin-nestjs-typed": "^6.4.9",
    "@eslint/js": "^9.25.1",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/qrcode": "^1.5.5",
    "@types/supertest": "^2.0.12",
    "@types/uuid": "^9.0.2",
    "@types/xml2js": "^0.4.11",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^8.0.0",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.31.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
